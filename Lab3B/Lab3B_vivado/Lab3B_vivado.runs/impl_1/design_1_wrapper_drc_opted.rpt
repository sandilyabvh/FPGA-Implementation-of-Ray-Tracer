Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
| Date         : Mon May  2 18:51:59 2022
| Host         : ece-linlabsrv01.ece.gatech.edu running 64-bit Red Hat Enterprise Linux Server release 7.9 (Maipo)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xczu3eg-sbva484-1-e
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 274
+--------+----------+------------------------+------------+
| Rule   | Severity | Description            | Violations |
+--------+----------+------------------------+------------+
| DPIP-2 | Warning  | Input pipelining       | 72         |
| DPOP-3 | Warning  | PREG Output pipelining | 94         |
| DPOP-4 | Warning  | MREG Output pipelining | 108        |
+--------+----------+------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-2#1 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#25 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#26 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#27 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#28 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#29 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#30 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#31 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#32 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#33 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#34 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#35 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#36 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#37 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#38 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#39 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#40 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#41 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#42 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#43 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#44 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#45 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#46 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#47 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#48 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#49 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#50 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#51 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#52 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#53 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#54 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#55 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#56 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#57 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#58 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#59 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#60 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#61 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#62 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#63 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#64 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#65 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#66 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#67 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#68 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#69 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#70 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#71 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#72 Warning
Input pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#13 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#14 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#15 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#16 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#17 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#18 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#19 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#20 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#21 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#22 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#23 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#24 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#25 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#26 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#27 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#28 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#29 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#30 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#31 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#32 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#33 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#34 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#35 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#36 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#37 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#38 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#39 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#40 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#41 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#42 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#43 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#44 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#45 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#46 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#47 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#48 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#49 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#50 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#51 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#52 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#53 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#54 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#55 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#56 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#57 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#58 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#59 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#60 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#61 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#62 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#63 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#64 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#65 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#66 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#67 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#68 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#69 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#70 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#71 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#72 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#73 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#74 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#75 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#76 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#77 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#78 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#79 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#80 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#81 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#82 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#83 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#84 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#85 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#86 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#87 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#88 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#89 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#90 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#91 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#92 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#93 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#94 Warning
PREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#19 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#20 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#21 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#22 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#23 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#24 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#25 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#26 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#27 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#28 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#29 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#30 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#31 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#32 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#33 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#34 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#35 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#36 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#37 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#38 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#39 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#40 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#41 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#42 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#43 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#44 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#45 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#46 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#47 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#48 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#49 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#50 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#51 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#52 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#53 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#54 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#55 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#56 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#57 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#58 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#59 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#60 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#61 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#62 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#63 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#64 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#65 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#66 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#67 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#68 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#69 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#70 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#71 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#72 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#73 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#74 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#75 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#76 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#77 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#78 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#79 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#80 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#81 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#82 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#83 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#84 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#85 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#86 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#87 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#88 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#89 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#90 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#91 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#92 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#93 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#94 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#95 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#96 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#97 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#98 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#99 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#100 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#101 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#102 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#103 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#104 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#105 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#106 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#107 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#108 Warning
MREG Output pipelining  
DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


