#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Mon May  2 18:47:49 2022
# Process ID: 138427
# Current directory: /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper.vdi
# Journal file: /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/nethome/sbn6/fpga/Lab3B'.
WARNING: [IP_Flow 19-3656] If you move the project, the path for repository '/nethome/sbn6/fpga/Lab3B' may become invalid. A better location for the repository would be in a path adjacent to the project. (Current project location is '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1'.)
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/software/xilinx/Vivado/2020.2/data/ip'.
update_ip_catalog: Time (s): cpu = 00:00:02 ; elapsed = 00:00:08 . Memory (MB): peak = 2538.191 ; gain = 0.000 ; free physical = 20805 ; free virtual = 115721
add_files: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 2538.191 ; gain = 0.000 ; free physical = 20756 ; free virtual = 115671
Command: link_design -top design_1_wrapper -part xczu3eg-sbva484-1-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xczu3eg-sbva484-1-e
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/design_1_axi_smc_0.dcp' for cell 'design_1_i/axi_smc'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_1_0/design_1_axi_smc_1_0.dcp' for cell 'design_1_i/axi_smc_1'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_2_0/design_1_axi_smc_2_0.dcp' for cell 'design_1_i/axi_smc_2'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_3_0/design_1_axi_smc_3_0.dcp' for cell 'design_1_i/axi_smc_3'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_4_0/design_1_axi_smc_4_0.dcp' for cell 'design_1_i/axi_smc_4'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rayTriangleIntersect_0_0/design_1_rayTriangleIntersect_0_0.dcp' for cell 'design_1_i/rayTriangleIntersect_0'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.dcp' for cell 'design_1_i/rst_ps8_0_99M'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.dcp' for cell 'design_1_i/zynq_ultra_ps_e_0'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0.dcp' for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds'
INFO: [Project 1-454] Reading design checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00.83 ; elapsed = 00:00:00.84 . Memory (MB): peak = 2867.969 ; gain = 0.000 ; free physical = 19876 ; free virtual = 114795
INFO: [Netlist 29-17] Analyzing 910 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_1_0/bd_0/ip/ip_1/bd_a878_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_1/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_1_0/bd_0/ip/ip_1/bd_a878_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_1/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_1_0/bd_0/ip/ip_1/bd_a878_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_1/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_1_0/bd_0/ip/ip_1/bd_a878_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_1/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_2_0/bd_0/ip/ip_1/bd_a888_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_2/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_2_0/bd_0/ip/ip_1/bd_a888_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_2/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_2_0/bd_0/ip/ip_1/bd_a888_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_2/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_2_0/bd_0/ip/ip_1/bd_a888_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_2/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_3_0/bd_0/ip/ip_1/bd_68d9_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_3/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_3_0/bd_0/ip/ip_1/bd_68d9_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_3/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_3_0/bd_0/ip/ip_1/bd_68d9_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_3/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_3_0/bd_0/ip/ip_1/bd_68d9_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_3/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_4_0/bd_0/ip/ip_1/bd_a968_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_4/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_4_0/bd_0/ip/ip_1/bd_a968_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc_4/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_4_0/bd_0/ip/ip_1/bd_a968_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_4/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_axi_smc_4_0/bd_0/ip/ip_1/bd_a968_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc_4/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
INFO: [Project 1-1715] 2 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3215.426 ; gain = 0.000 ; free physical = 19792 ; free virtual = 114724
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 320 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD, DSP_PREADD_DATA): 108 instances
  RAM32M16 => RAM32M16 (RAMD32(x14), RAMS32(x2)): 212 instances

21 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:37 ; elapsed = 00:01:09 . Memory (MB): peak = 3215.426 ; gain = 677.234 ; free physical = 19793 ; free virtual = 114724
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 3215.426 ; gain = 0.000 ; free physical = 19765 ; free virtual = 114709

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 136022d06

Time (s): cpu = 00:00:21 ; elapsed = 00:00:14 . Memory (MB): peak = 3472.008 ; gain = 256.582 ; free physical = 19463 ; free virtual = 114408

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 132 inverter(s) to 4156 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 108d03c33

Time (s): cpu = 00:00:08 ; elapsed = 00:00:04 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19390 ; free virtual = 114335
INFO: [Opt 31-389] Phase Retarget created 193 cells and removed 641 cells
INFO: [Opt 31-1021] In phase Retarget, 100 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 25 inverter(s) to 45 load pin(s).
Phase 2 Constant propagation | Checksum: d1933971

Time (s): cpu = 00:00:09 ; elapsed = 00:00:05 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19391 ; free virtual = 114335
INFO: [Opt 31-389] Phase Constant propagation created 169 cells and removed 1653 cells
INFO: [Opt 31-1021] In phase Constant propagation, 125 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
INFO: [Opt 31-120] Instance design_1_i/axi_smc_4/inst/s00_nodes/s00_ar_node/inst/inst_si_handler (design_1_axi_smc_4_0_sc_node_v1_0_12_si_handler) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_3/inst/s00_nodes/s00_w_node/inst/inst_si_handler (design_1_axi_smc_3_0_sc_node_v1_0_12_si_handler__parameterized3) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_3/inst/s00_nodes/s00_aw_node/inst/inst_si_handler (design_1_axi_smc_3_0_sc_node_v1_0_12_si_handler__parameterized0) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_2/inst/s00_nodes/s00_w_node/inst/inst_si_handler (design_1_axi_smc_2_0_sc_node_v1_0_12_si_handler__parameterized3) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_2/inst/s00_nodes/s00_aw_node/inst/inst_si_handler (design_1_axi_smc_2_0_sc_node_v1_0_12_si_handler__parameterized0) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_1/inst/s00_nodes/s00_w_node/inst/inst_si_handler (design_1_axi_smc_1_0_sc_node_v1_0_12_si_handler__parameterized3) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc_1/inst/s00_nodes/s00_aw_node/inst/inst_si_handler (design_1_axi_smc_1_0_sc_node_v1_0_12_si_handler__parameterized0) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_si_handler (design_1_axi_smc_0_sc_node_v1_0_12_si_handler__parameterized3) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
INFO: [Opt 31-120] Instance design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_si_handler (design_1_axi_smc_0_sc_node_v1_0_12_si_handler__parameterized0) has been optimized to an empty box cell during sweep but it has constraints that prevent its removal. Empty box cells do not impact the implementation flow but they have no functional relevance.
Resolution: If this is not expected, please check for DONT_TOUCH properties or timing constraint set on the empty box cell or on nets connected to the cell. If found, remove the relevant DONT_TOUCH property or timing constraint and re-run opt_design.
Phase 3 Sweep | Checksum: bcce28eb

Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19403 ; free virtual = 114347
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1474 cells
INFO: [Opt 31-1021] In phase Sweep, 222 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-1077] Phase BUFG optimization inserted 0 global clock buffer(s) for CLOCK_LOW_FANOUT.
Phase 4 BUFG optimization | Checksum: bcce28eb

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19402 ; free virtual = 114347
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: bcce28eb

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19402 ; free virtual = 114346
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: bcce28eb

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19402 ; free virtual = 114347
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 109 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |             193  |             641  |                                            100  |
|  Constant propagation         |             169  |            1653  |                                            125  |
|  Sweep                        |               0  |            1474  |                                            222  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            109  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.06 . Memory (MB): peak = 3650.852 ; gain = 0.000 ; free physical = 19397 ; free virtual = 114341
Ending Logic Optimization Task | Checksum: 12fc7db23

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 3650.852 ; gain = 0.004 ; free physical = 19397 ; free virtual = 114341

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 77 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 3 Total Ports: 154
Ending PowerOpt Patch Enables Task | Checksum: eef15389

Time (s): cpu = 00:00:00.71 ; elapsed = 00:00:00.74 . Memory (MB): peak = 4529.570 ; gain = 0.000 ; free physical = 19885 ; free virtual = 114804
Ending Power Optimization Task | Checksum: eef15389

Time (s): cpu = 00:00:52 ; elapsed = 00:01:09 . Memory (MB): peak = 4529.570 ; gain = 878.719 ; free physical = 19934 ; free virtual = 114853

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: eef15389

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4529.570 ; gain = 0.000 ; free physical = 19934 ; free virtual = 114853

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 4529.570 ; gain = 0.000 ; free physical = 19934 ; free virtual = 114853
Ending Netlist Obfuscation Task | Checksum: bc3fbe97

Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 4529.570 ; gain = 0.000 ; free physical = 19934 ; free virtual = 114853
INFO: [Common 17-83] Releasing license: Implementation
57 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:36 ; elapsed = 00:01:41 . Memory (MB): peak = 4529.570 ; gain = 1314.145 ; free physical = 19936 ; free virtual = 114855
INFO: [Timing 38-480] Writing timing data to binary archive.
INFO: [Common 17-1381] The checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 4529.570 ; gain = 0.000 ; free physical = 19901 ; free virtual = 114833
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:54 ; elapsed = 00:00:37 . Memory (MB): peak = 5013.734 ; gain = 484.164 ; free physical = 19202 ; free virtual = 114258
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
WARNING: [Vivado_Tcl 4-1400] -ultrathreads option currently only supported on multi-SLR devices. Continuing placement in regular mode.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.02 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19182 ; free virtual = 114241
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 58c0d438

Time (s): cpu = 00:00:00.06 ; elapsed = 00:00:00.08 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19182 ; free virtual = 114241
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19181 ; free virtual = 114241

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: cb5f8e03

Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19211 ; free virtual = 114285

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 10f20298a

Time (s): cpu = 00:00:31 ; elapsed = 00:00:16 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19161 ; free virtual = 114239

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 10f20298a

Time (s): cpu = 00:00:31 ; elapsed = 00:00:16 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19161 ; free virtual = 114239
Phase 1 Placer Initialization | Checksum: 10f20298a

Time (s): cpu = 00:00:32 ; elapsed = 00:00:16 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19160 ; free virtual = 114238

Phase 2 Global Placement

Phase 2.1 Floorplanning

Phase 2.1.1 Partition Driven Placement

Phase 2.1.1.1 PBP: Partition Driven Placement
Phase 2.1.1.1 PBP: Partition Driven Placement | Checksum: 1574e0884

Time (s): cpu = 00:00:45 ; elapsed = 00:00:21 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19158 ; free virtual = 114234

Phase 2.1.1.2 PBP: Clock Region Placement
Phase 2.1.1.2 PBP: Clock Region Placement | Checksum: fcb24edb

Time (s): cpu = 00:00:46 ; elapsed = 00:00:22 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19159 ; free virtual = 114237

Phase 2.1.1.3 PBP: Discrete Incremental
Phase 2.1.1.3 PBP: Discrete Incremental | Checksum: e452f720

Time (s): cpu = 00:00:46 ; elapsed = 00:00:22 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19159 ; free virtual = 114237

Phase 2.1.1.4 PBP: Compute Congestion
Phase 2.1.1.4 PBP: Compute Congestion | Checksum: e452f720

Time (s): cpu = 00:00:46 ; elapsed = 00:00:23 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19144 ; free virtual = 114221

Phase 2.1.1.5 PBP: Macro Placement
Phase 2.1.1.5 PBP: Macro Placement | Checksum: 1db9491e2

Time (s): cpu = 00:00:47 ; elapsed = 00:00:23 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19154 ; free virtual = 114232

Phase 2.1.1.6 PBP: UpdateTiming
Phase 2.1.1.6 PBP: UpdateTiming | Checksum: 1a9909ecd

Time (s): cpu = 00:00:50 ; elapsed = 00:00:25 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19148 ; free virtual = 114226

Phase 2.1.1.7 PBP: Add part constraints
Phase 2.1.1.7 PBP: Add part constraints | Checksum: 1a9909ecd

Time (s): cpu = 00:00:50 ; elapsed = 00:00:25 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19148 ; free virtual = 114226
Phase 2.1.1 Partition Driven Placement | Checksum: 1a9909ecd

Time (s): cpu = 00:00:50 ; elapsed = 00:00:25 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19150 ; free virtual = 114228
Phase 2.1 Floorplanning | Checksum: 1915781cd

Time (s): cpu = 00:00:50 ; elapsed = 00:00:25 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19150 ; free virtual = 114228

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 1915781cd

Time (s): cpu = 00:00:50 ; elapsed = 00:00:25 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 19150 ; free virtual = 114228

Phase 2.3 Global Placement Core

Phase 2.3.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 311 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 130 nets or cells. Created 0 new cell, deleted 130 existing cells and moved 0 existing cell
INFO: [Physopt 32-1030] Pass 1. Identified 5 candidate driver sets for equivalent driver rewiring.
INFO: [Physopt 32-661] Optimized 5 nets.  Re-placed 25 instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 5 nets or cells. Created 0 new cell, deleted 0 existing cell and moved 25 existing cells
Netlist sorting complete. Time (s): cpu = 00:00:00.17 ; elapsed = 00:00:00.18 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20218 ; free virtual = 115295
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20219 ; free virtual = 115297

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            130  |                   130  |           0  |           1  |  00:00:01  |
|  Equivalent Driver Rewiring                       |            0  |              0  |                     5  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            130  |                   135  |           0  |           4  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.3.1 Physical Synthesis In Placer | Checksum: 1a358500e

Time (s): cpu = 00:01:39 ; elapsed = 00:00:44 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20233 ; free virtual = 115311
Phase 2.3 Global Placement Core | Checksum: 14e9c1a8a

Time (s): cpu = 00:01:43 ; elapsed = 00:00:46 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20231 ; free virtual = 115309
Phase 2 Global Placement | Checksum: 14e9c1a8a

Time (s): cpu = 00:01:43 ; elapsed = 00:00:46 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20238 ; free virtual = 115316

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 18caa6c41

Time (s): cpu = 00:01:45 ; elapsed = 00:00:47 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20236 ; free virtual = 115314

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 13e7411c4

Time (s): cpu = 00:01:52 ; elapsed = 00:00:51 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20239 ; free virtual = 115317

Phase 3.3 Small Shape DP

Phase 3.3.1 Small Shape Clustering
Phase 3.3.1 Small Shape Clustering | Checksum: 1db048b0c

Time (s): cpu = 00:01:55 ; elapsed = 00:00:52 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20235 ; free virtual = 115314

Phase 3.3.2 Flow Legalize Slice Clusters
Phase 3.3.2 Flow Legalize Slice Clusters | Checksum: 17737ffde

Time (s): cpu = 00:01:56 ; elapsed = 00:00:53 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20237 ; free virtual = 115315

Phase 3.3.3 Slice Area Swap
Phase 3.3.3 Slice Area Swap | Checksum: 175e896bc

Time (s): cpu = 00:01:57 ; elapsed = 00:00:54 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20232 ; free virtual = 115310
Phase 3.3 Small Shape DP | Checksum: 11a10429d

Time (s): cpu = 00:02:03 ; elapsed = 00:00:57 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20463 ; free virtual = 115509

Phase 3.4 Re-assign LUT pins
Phase 3.4 Re-assign LUT pins | Checksum: 11d22e981

Time (s): cpu = 00:02:05 ; elapsed = 00:00:58 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20488 ; free virtual = 115534

Phase 3.5 Pipeline Register Optimization
Phase 3.5 Pipeline Register Optimization | Checksum: 15b0f9ddc

Time (s): cpu = 00:02:05 ; elapsed = 00:00:59 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20490 ; free virtual = 115536
Phase 3 Detail Placement | Checksum: 15b0f9ddc

Time (s): cpu = 00:02:05 ; elapsed = 00:00:59 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20490 ; free virtual = 115536

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1400d34fc

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=1.767 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 147f1a507

Time (s): cpu = 00:00:03 ; elapsed = 00:00:00.72 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20464 ; free virtual = 115510
INFO: [Place 46-35] Processed net design_1_i/rst_ps8_0_99M/U0/peripheral_aresetn[0], inserted BUFG to drive 3496 loads.
INFO: [Place 46-45] Replicated bufg driver design_1_i/rst_ps8_0_99M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_replica
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 1, Replicated BUFG Driver: 1, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 1300f06eb

Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20471 ; free virtual = 115517
Phase 4.1.1.1 BUFG Insertion | Checksum: 1a4755a4c

Time (s): cpu = 00:02:40 ; elapsed = 00:01:10 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20473 ; free virtual = 115519
INFO: [Place 30-746] Post Placement Timing Summary WNS=1.767. For the most accurate timing information please run report_timing.

Time (s): cpu = 00:02:41 ; elapsed = 00:01:11 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20474 ; free virtual = 115519
Phase 4.1 Post Commit Optimization | Checksum: deeb9592

Time (s): cpu = 00:02:41 ; elapsed = 00:01:11 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20474 ; free virtual = 115519
Netlist sorting complete. Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.13 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20474 ; free virtual = 115519

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 154fbcaa9

Time (s): cpu = 00:02:43 ; elapsed = 00:01:13 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20473 ; free virtual = 115519

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ________________________________________________________________________
|           | Global Congestion | Long Congestion   | Short Congestion  |
| Direction | Region Size       | Region Size       | Region Size       |
|___________|___________________|___________________|___________________|
|      North|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|      South|                2x2|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|       East|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|       West|                2x2|                1x1|                4x4|
|___________|___________________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 154fbcaa9

Time (s): cpu = 00:02:43 ; elapsed = 00:01:13 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20481 ; free virtual = 115527
Phase 4.3 Placer Reporting | Checksum: 154fbcaa9

Time (s): cpu = 00:02:44 ; elapsed = 00:01:14 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20484 ; free virtual = 115530

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20484 ; free virtual = 115530

Time (s): cpu = 00:02:44 ; elapsed = 00:01:14 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20484 ; free virtual = 115530
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 18d5ed107

Time (s): cpu = 00:02:44 ; elapsed = 00:01:14 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20485 ; free virtual = 115531
Ending Placer Task | Checksum: 1603d0eb6

Time (s): cpu = 00:02:44 ; elapsed = 00:01:14 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20485 ; free virtual = 115531
INFO: [Common 17-83] Releasing license: Implementation
97 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:02:51 ; elapsed = 00:01:19 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20535 ; free virtual = 115581
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20448 ; free virtual = 115560
INFO: [Common 17-1381] The checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:17 ; elapsed = 00:00:12 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20523 ; free virtual = 115586
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.10 ; elapsed = 00:00:00.31 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20508 ; free virtual = 115571
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.13 ; elapsed = 00:00:00.30 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20519 ; free virtual = 115582
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
106 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:03 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20378 ; free virtual = 115508
INFO: [Common 17-1381] The checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20465 ; free virtual = 115546
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 9a9022f4 ConstDB: 0 ShapeSum: 4f9cb6ab RouteDB: 76103517

Phase 1 Build RT Design
Nodegraph reading from file.  Time (s): cpu = 00:00:00.57 ; elapsed = 00:00:00.66 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20365 ; free virtual = 115449
Phase 1 Build RT Design | Checksum: 650e3edc

Time (s): cpu = 00:00:48 ; elapsed = 00:00:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20345 ; free virtual = 115430
Post Restoration Checksum: NetGraph: 7858a3e4 NumContArr: 1e482e9b Constraints: 9fbe668f Timing: 0

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 1365f390e

Time (s): cpu = 00:00:49 ; elapsed = 00:00:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20299 ; free virtual = 115384

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 1365f390e

Time (s): cpu = 00:00:49 ; elapsed = 00:00:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20302 ; free virtual = 115387

Phase 2.3 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.3 Global Clock Net Routing | Checksum: 1bfd51b31

Time (s): cpu = 00:00:50 ; elapsed = 00:00:10 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20295 ; free virtual = 115380

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 19a05ee60

Time (s): cpu = 00:01:06 ; elapsed = 00:00:16 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20285 ; free virtual = 115371
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.871  | TNS=0.000  | WHS=-0.052 | THS=-12.122|

Phase 2 Router Initialization | Checksum: 19adf0a84

Time (s): cpu = 00:01:31 ; elapsed = 00:00:24 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20273 ; free virtual = 115358

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 25014
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 23371
  Number of Partially Routed Nets     = 1643
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 19adf0a84

Time (s): cpu = 00:01:32 ; elapsed = 00:00:24 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20272 ; free virtual = 115358
Phase 3 Initial Routing | Checksum: 1fc33e10c

Time (s): cpu = 00:01:55 ; elapsed = 00:00:30 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115338

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 3388
 Number of Nodes with overlaps = 248
 Number of Nodes with overlaps = 15
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.564  | TNS=0.000  | WHS=-0.030 | THS=-0.276 |

Phase 4.1 Global Iteration 0 | Checksum: 1b32ff839

Time (s): cpu = 00:04:50 ; elapsed = 00:01:59 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115339

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 1ca544d8b

Time (s): cpu = 00:04:51 ; elapsed = 00:01:59 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115340
Phase 4 Rip-up And Reroute | Checksum: 1ca544d8b

Time (s): cpu = 00:04:51 ; elapsed = 00:01:59 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115340

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 22872c6b9

Time (s): cpu = 00:05:12 ; elapsed = 00:02:06 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115340
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.564  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 5.1 Delay CleanUp | Checksum: 22872c6b9

Time (s): cpu = 00:05:13 ; elapsed = 00:02:06 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115340

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 22872c6b9

Time (s): cpu = 00:05:13 ; elapsed = 00:02:06 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115341
Phase 5 Delay and Skew Optimization | Checksum: 22872c6b9

Time (s): cpu = 00:05:13 ; elapsed = 00:02:06 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115341

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1b8fd664b

Time (s): cpu = 00:05:25 ; elapsed = 00:02:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115340
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.564  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 24ce9acfb

Time (s): cpu = 00:05:25 ; elapsed = 00:02:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115341
Phase 6 Post Hold Fix | Checksum: 24ce9acfb

Time (s): cpu = 00:05:25 ; elapsed = 00:02:09 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20254 ; free virtual = 115341

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.72184 %
  Global Horizontal Routing Utilization  = 5.88636 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 265de8a11

Time (s): cpu = 00:05:26 ; elapsed = 00:02:10 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115340

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 265de8a11

Time (s): cpu = 00:05:26 ; elapsed = 00:02:10 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20253 ; free virtual = 115340

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 265de8a11

Time (s): cpu = 00:05:28 ; elapsed = 00:02:11 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20256 ; free virtual = 115342

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=1.564  | TNS=0.000  | WHS=0.010  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 265de8a11

Time (s): cpu = 00:05:29 ; elapsed = 00:02:12 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20258 ; free virtual = 115344
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:05:29 ; elapsed = 00:02:12 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20328 ; free virtual = 115415

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
121 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:05:44 ; elapsed = 00:02:18 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20329 ; free virtual = 115416
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20218 ; free virtual = 115381
INFO: [Common 17-1381] The checkpoint '/nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:17 ; elapsed = 00:00:13 . Memory (MB): peak = 5013.734 ; gain = 0.000 ; free physical = 20310 ; free virtual = 115417
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:01:00 ; elapsed = 00:00:14 . Memory (MB): peak = 5061.754 ; gain = 48.020 ; free physical = 20249 ; free virtual = 115355
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /nethome/sbn6/fpga/Lab3B/Lab3B_vivado/Lab3B_vivado.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:30 ; elapsed = 00:00:09 . Memory (MB): peak = 5061.754 ; gain = 0.000 ; free physical = 20241 ; free virtual = 115349
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
133 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:32 ; elapsed = 00:00:15 . Memory (MB): peak = 5061.754 ; gain = 0.000 ; free physical = 20167 ; free virtual = 115289
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_4/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_4/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_4/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_4/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_4/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_4/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_4/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_4/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_3/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_3/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_3/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_3/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_3/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_3/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_3/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_3/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_2/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_2/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_2/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_2/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_2/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_2/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_2/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_2/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_1/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_1/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_1/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_1/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_1/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc_1/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_3_reg_1273_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_9_reg_1300_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_reg_1246_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0 input design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/tmp_1_reg_1305_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 output design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/local_t_V_reg_1386_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U21/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U22/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U23/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U24/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U25/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U26/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U27/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U28/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U29/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U30/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U31/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U33/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U34/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U35/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U36/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U37/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U38/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U39/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U40/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U41/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U42/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U43/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U44/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U45/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U46/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U47/dout__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/mul_32s_32s_48_1_1_U48/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_1_reg_1257_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0 multiplier stage design_1_i/rayTriangleIntersect_0/inst/grp_rayTriangleIntersect_Pipeline_NUM_TRIS_LOOP_fu_272/r_V_2_reg_1268_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-4' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC RTSTAT-10] No routable loads: 33 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/grss.rsts/ram_empty_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0], design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/rd_rst_reg[2:0]... and (the first 15 of 21 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 275 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
32 Infos, 267 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:37 ; elapsed = 00:00:34 . Memory (MB): peak = 5102.730 ; gain = 40.977 ; free physical = 20107 ; free virtual = 115238
INFO: [Common 17-206] Exiting Vivado at Mon May  2 18:57:37 2022...
