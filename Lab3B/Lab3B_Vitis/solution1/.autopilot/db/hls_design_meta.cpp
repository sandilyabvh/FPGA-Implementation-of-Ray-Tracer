#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_dir_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dir_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dir_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dir_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dir_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_dir_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dir_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_dir_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dir_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dir_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_dir_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_dir_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_dir_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dir_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dir_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dir_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_dir_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_dir_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_dir_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dir_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dir_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dir_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dir_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dir_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dir_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_dir_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dir_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_dir_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dir_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dir_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_dir_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_dir_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_dir_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dir_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dir_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dir_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_dir_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_dir_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dir_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dir_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_dir_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_dir_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_dir_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_dir_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_dir_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_P1_DRAM_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_P1_DRAM_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_P1_DRAM_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P1_DRAM_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_P1_DRAM_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_P1_DRAM_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P1_DRAM_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_P1_DRAM_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P1_DRAM_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P1_DRAM_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_P1_DRAM_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_P1_DRAM_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_P1_DRAM_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_P1_DRAM_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_P1_DRAM_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_P1_DRAM_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_P1_DRAM_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_P1_DRAM_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_P1_DRAM_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_P1_DRAM_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_P1_DRAM_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_P1_DRAM_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_P1_DRAM_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P1_DRAM_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_P1_DRAM_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_P1_DRAM_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P1_DRAM_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_P1_DRAM_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P1_DRAM_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P1_DRAM_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_P1_DRAM_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_P1_DRAM_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_P1_DRAM_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_P1_DRAM_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_P1_DRAM_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_P1_DRAM_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_P1_DRAM_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_P1_DRAM_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_P1_DRAM_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_P1_DRAM_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_P1_DRAM_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_P1_DRAM_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_P1_DRAM_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_P1_DRAM_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_P1_DRAM_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_P2_DRAM_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_P2_DRAM_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_P2_DRAM_AWADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P2_DRAM_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_P2_DRAM_AWLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_P2_DRAM_AWSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P2_DRAM_AWBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_P2_DRAM_AWLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P2_DRAM_AWCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P2_DRAM_AWPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_P2_DRAM_AWQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_P2_DRAM_AWREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_P2_DRAM_AWUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_P2_DRAM_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_P2_DRAM_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_P2_DRAM_WDATA", 32, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_P2_DRAM_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_P2_DRAM_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_P2_DRAM_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_P2_DRAM_WUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_P2_DRAM_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_P2_DRAM_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_P2_DRAM_ARADDR", 64, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P2_DRAM_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_P2_DRAM_ARLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_P2_DRAM_ARSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P2_DRAM_ARBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_P2_DRAM_ARLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P2_DRAM_ARCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P2_DRAM_ARPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_P2_DRAM_ARQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_P2_DRAM_ARREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_P2_DRAM_ARUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_P2_DRAM_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_P2_DRAM_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_P2_DRAM_RDATA", 32, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_P2_DRAM_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_P2_DRAM_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_P2_DRAM_RUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_P2_DRAM_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_P2_DRAM_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_P2_DRAM_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_P2_DRAM_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_P2_DRAM_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_P2_DRAM_BUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_P3_DRAM_AWVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_P3_DRAM_AWREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_P3_DRAM_AWADDR", 64, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P3_DRAM_AWID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_P3_DRAM_AWLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_P3_DRAM_AWSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P3_DRAM_AWBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_P3_DRAM_AWLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P3_DRAM_AWCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P3_DRAM_AWPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_P3_DRAM_AWQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_P3_DRAM_AWREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_P3_DRAM_AWUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_P3_DRAM_WVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_P3_DRAM_WREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_P3_DRAM_WDATA", 32, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_P3_DRAM_WSTRB", 4, hls_out, 3, "m_axi", "STRB", 1),
	Port_Property("m_axi_P3_DRAM_WLAST", 1, hls_out, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_P3_DRAM_WID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_P3_DRAM_WUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_P3_DRAM_ARVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_P3_DRAM_ARREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_P3_DRAM_ARADDR", 64, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_P3_DRAM_ARID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_P3_DRAM_ARLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_P3_DRAM_ARSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_P3_DRAM_ARBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_P3_DRAM_ARLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_P3_DRAM_ARCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_P3_DRAM_ARPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_P3_DRAM_ARQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_P3_DRAM_ARREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_P3_DRAM_ARUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_P3_DRAM_RVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_P3_DRAM_RREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_P3_DRAM_RDATA", 32, hls_in, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_P3_DRAM_RLAST", 1, hls_in, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_P3_DRAM_RID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_P3_DRAM_RUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_P3_DRAM_RRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_P3_DRAM_BVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_P3_DRAM_BREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_P3_DRAM_BRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_P3_DRAM_BID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_P3_DRAM_BUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_intersectIndex_AWVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_intersectIndex_AWREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_intersectIndex_AWADDR", 64, hls_out, 4, "m_axi", "ADDR", 1),
	Port_Property("m_axi_intersectIndex_AWID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_intersectIndex_AWLEN", 8, hls_out, 4, "m_axi", "LEN", 1),
	Port_Property("m_axi_intersectIndex_AWSIZE", 3, hls_out, 4, "m_axi", "SIZE", 1),
	Port_Property("m_axi_intersectIndex_AWBURST", 2, hls_out, 4, "m_axi", "BURST", 1),
	Port_Property("m_axi_intersectIndex_AWLOCK", 2, hls_out, 4, "m_axi", "LOCK", 1),
	Port_Property("m_axi_intersectIndex_AWCACHE", 4, hls_out, 4, "m_axi", "CACHE", 1),
	Port_Property("m_axi_intersectIndex_AWPROT", 3, hls_out, 4, "m_axi", "PROT", 1),
	Port_Property("m_axi_intersectIndex_AWQOS", 4, hls_out, 4, "m_axi", "QOS", 1),
	Port_Property("m_axi_intersectIndex_AWREGION", 4, hls_out, 4, "m_axi", "REGION", 1),
	Port_Property("m_axi_intersectIndex_AWUSER", 1, hls_out, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_intersectIndex_WVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_intersectIndex_WREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_intersectIndex_WDATA", 32, hls_out, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_intersectIndex_WSTRB", 4, hls_out, 4, "m_axi", "STRB", 1),
	Port_Property("m_axi_intersectIndex_WLAST", 1, hls_out, 4, "m_axi", "LAST", 1),
	Port_Property("m_axi_intersectIndex_WID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_intersectIndex_WUSER", 1, hls_out, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_intersectIndex_ARVALID", 1, hls_out, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_intersectIndex_ARREADY", 1, hls_in, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_intersectIndex_ARADDR", 64, hls_out, 4, "m_axi", "ADDR", 1),
	Port_Property("m_axi_intersectIndex_ARID", 1, hls_out, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_intersectIndex_ARLEN", 8, hls_out, 4, "m_axi", "LEN", 1),
	Port_Property("m_axi_intersectIndex_ARSIZE", 3, hls_out, 4, "m_axi", "SIZE", 1),
	Port_Property("m_axi_intersectIndex_ARBURST", 2, hls_out, 4, "m_axi", "BURST", 1),
	Port_Property("m_axi_intersectIndex_ARLOCK", 2, hls_out, 4, "m_axi", "LOCK", 1),
	Port_Property("m_axi_intersectIndex_ARCACHE", 4, hls_out, 4, "m_axi", "CACHE", 1),
	Port_Property("m_axi_intersectIndex_ARPROT", 3, hls_out, 4, "m_axi", "PROT", 1),
	Port_Property("m_axi_intersectIndex_ARQOS", 4, hls_out, 4, "m_axi", "QOS", 1),
	Port_Property("m_axi_intersectIndex_ARREGION", 4, hls_out, 4, "m_axi", "REGION", 1),
	Port_Property("m_axi_intersectIndex_ARUSER", 1, hls_out, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_intersectIndex_RVALID", 1, hls_in, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_intersectIndex_RREADY", 1, hls_out, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_intersectIndex_RDATA", 32, hls_in, 4, "m_axi", "DATA", 1),
	Port_Property("m_axi_intersectIndex_RLAST", 1, hls_in, 4, "m_axi", "LAST", 1),
	Port_Property("m_axi_intersectIndex_RID", 1, hls_in, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_intersectIndex_RUSER", 1, hls_in, 4, "m_axi", "USER", 1),
	Port_Property("m_axi_intersectIndex_RRESP", 2, hls_in, 4, "m_axi", "RESP", 1),
	Port_Property("m_axi_intersectIndex_BVALID", 1, hls_in, 4, "m_axi", "VALID", 1),
	Port_Property("m_axi_intersectIndex_BREADY", 1, hls_out, 4, "m_axi", "READY", 1),
	Port_Property("m_axi_intersectIndex_BRESP", 2, hls_in, 4, "m_axi", "RESP", 1),
	Port_Property("m_axi_intersectIndex_BID", 1, hls_in, 4, "m_axi", "ID", 1),
	Port_Property("m_axi_intersectIndex_BUSER", 1, hls_in, 4, "m_axi", "USER", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "rayTriangleIntersect";
